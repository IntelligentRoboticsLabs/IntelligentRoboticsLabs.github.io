{"version":3,"sources":["webpack:///./src/@nehalist/gatsby-theme-nehalem/components/card/style.tsx","webpack:///./src/@nehalist/gatsby-theme-nehalem/components/card/index.tsx","webpack:///./node_modules/@nehalist/gatsby-theme-nehalem/src/components/page-sidebar-content/index.tsx","webpack:///./node_modules/@nehalist/gatsby-theme-nehalem/src/templates/page.tsx"],"names":["StyledCard","styled","Link","StyledArticle","article","Theme","breakpoints","sm","FeaturedImage","Img","props","halfImage","CardContent","section","compact","CardMeta","CardTitle","h2","Card","title","meta","path","featuredImage","content","style","children","to","fixed","sizes","tag","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","LatestPosts","div","md","PageSidebarContent","posts","useStaticQuery","edges","map","node","post","index","frontmatter","childImageSharp","key","created","createdPretty","tags","length","PageContainer","Container","layout","linkColor","PageSidebar","aside","PageTemplate","pathContext","location","page","bigHeader","description","excerpt","html"],"mappings":"gNAMaA,EAAaC,kBAAOC,QAAV,wEAAGD,CAAH,uPAgBVE,EAAgBF,UAAOG,QAAV,2EAAGH,CAAH,wFAIHI,IAAMC,YAAYC,IAK5BC,EAAgBP,kBAAOQ,KAAV,2EAAGR,CAAH,uGAMtB,SAAAS,GAAK,OAAIA,EAAMC,UAAN,mJAOYN,IAAMC,YAAYC,GAP9B,0LAoBAK,EAAcX,UAAOY,QAAV,yEAAGZ,CAAH,uDACX,SAAAS,GAAK,OAAIA,EAAMI,QAAU,OAAS,UAWlCC,EAAWd,UAAOY,QAAV,sEAAGZ,CAAH,6GASRe,EAAYf,UAAOgB,GAAV,uEAAGhB,CAAH,yBC3DTiB,EAAqC,SAAC,GAAD,IACGC,EADH,EACGA,MACAC,EAFH,EAEGA,KACAC,EAHH,EAGGA,KACAC,EAJH,EAIGA,cACAC,EALH,EAKGA,QALH,IAMGZ,iBANH,aAOGG,eAPH,SAQGU,EARH,EAQGA,MACAC,EATH,EASGA,SATH,OAWhD,kBAACtB,EAAD,CAAeqB,MAAOA,GACpB,kBAACxB,EAAD,CAAY0B,GAAIL,GAEZC,GAAiBA,EAAcK,OACjC,kBAACnB,EAAD,CAAemB,MAAOL,EAAcK,MAAOhB,UAAWA,IAEpDW,GAAiBA,EAAcM,OACjC,kBAACpB,EAAD,CAAeoB,MAAON,EAAcM,MAAOjB,UAAWA,IAEtD,kBAACC,EAAD,CAAaE,QAASA,GACnBW,EACD,gCACGL,GACD,kBAACL,EAAD,KACGK,EAAKS,KAAO,oCAAGT,EAAKS,KACpBT,EAAKU,MACN,0BAAMC,SAAUX,EAAKU,MAAOV,EAAKY,aAIlCb,GACD,kBAACH,EAAD,KAAYG,IAGbI,GACD,uBAAGU,wBAAyB,CAACC,OAAQX,U,0ICjDvCY,EAAclC,UAAOmC,IAAV,oFAAGnC,CAAH,gLAMMI,IAAMC,YAAY+B,IAmE1BC,EA1D+B,WAC5C,IA8BMC,EA9BcC,yBAAe,cA8BTD,MAAME,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKA,QAEvD,OACE,oCACE,4CACA,kBAACR,EAAD,KACGI,EAAMG,KAAI,SAACE,EAAMC,GAAP,OACT,kBAAC,IAAD,CACE1B,MAAOyB,EAAKE,YAAY3B,MACxBG,cAAesB,EAAKE,YAAYxB,cAAcyB,gBAC9C1B,KAAMuB,EAAKE,YAAYzB,KACvB2B,IAAKH,EACL/B,SAAS,EACTM,KACE,CACEU,KAAMc,EAAKE,YAAYG,QACvBjB,WAAYY,EAAKE,YAAYI,cAC7BrB,IAAKe,EAAKE,YAAYK,KAAKC,OAAS,EAAIR,EAAKE,YAAYK,KAAK,GAAK,c,YCpD7EE,EAAgBpD,kBAAOqD,KAAV,sEAAGrD,CAAH,sKAIII,IAAMC,YAAYC,GAU5BF,IAAMkD,OAAOC,UACDnD,IAAMkD,OAAOC,WAIhCC,EAAcxD,UAAOyD,MAAV,oEAAGzD,CAAH,4DAGMI,IAAMC,YAAYC,IA0B1BoD,UArB4C,SAAC,GAA4B,IAA3BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAClEC,EAAOF,EAAYE,KAEzB,OACE,kBAAC,IAAD,CAAQC,WAAW,GACjB,kBAAC,IAAD,CACE5C,MAAO2C,EAAKhB,YAAY3B,MACxB6C,YAAaF,EAAKhB,YAAYmB,QAC9BJ,SAAUA,IAGZ,kBAACR,EAAD,KACE,6BAASpB,wBAAyB,CAACC,OAAQ4B,EAAKI,QAChD,kBAACT,EAAD,KACE,kBAAC,EAAD","file":"component---node-modules-nehalist-gatsby-theme-nehalem-src-templates-page-tsx-d4d9348011423ebb93bf.js","sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: contain;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, {CSSProperties, FunctionComponent, ReactNode} from \"react\";\nimport {CardContent, CardMeta, CardTitle, FeaturedImage, StyledArticle, StyledCard} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n                                                     title,\n                                                     meta,\n                                                     path,\n                                                     featuredImage,\n                                                     content,\n                                                     halfImage = false,\n                                                     compact = false,\n                                                     style,\n                                                     children,\n                                                   }) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {(featuredImage && featuredImage.fixed) &&\n      <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage}/>\n      }\n      {(featuredImage && featuredImage.sizes) &&\n      <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage}/>\n      }\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta &&\n          <CardMeta>\n            {meta.tag && <>{meta.tag}</>}\n            {meta.time &&\n            <time dateTime={meta.time}>{meta.timePretty}</time>\n            }\n          </CardMeta>\n          }\n          {title &&\n          <CardTitle>{title}</CardTitle>\n          }\n        </header>\n        {content &&\n        <p dangerouslySetInnerHTML={{__html: content}}/>\n        }\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport {Card} from \"../card\";\nimport styled from \"styled-components\";\nimport Theme from \"../../styles/theme\";\n\nconst LatestPosts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 30px;\n  width: 210px;\n\n  @media (max-width: ${Theme.breakpoints.md}) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (max-width: 700px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PageSidebarContent: FunctionComponent = () => {\n  const latestPosts = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\\\\\.md$/\" } }\n        sort: { fields: frontmatter___created, order: DESC }\n        limit: 3\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              path\n              tags\n              created\n              createdPretty: created(formatString: \"DD MMMM, YYYY\")\n              excerpt\n              featuredImage {\n                childImageSharp {\n                  fixed(width: 215, height: 100) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const posts = latestPosts.posts.edges.map(node => node.node);\n\n  return (\n    <>\n      <h3>Latest posts</h3>\n      <LatestPosts>\n        {posts.map((post, index) => (\n          <Card\n            title={post.frontmatter.title}\n            featuredImage={post.frontmatter.featuredImage.childImageSharp}\n            path={post.frontmatter.path}\n            key={index}\n            compact={true}\n            meta={\n              {\n                time: post.frontmatter.created,\n                timePretty: post.frontmatter.createdPretty,\n                tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n              }\n            }\n          />\n        ))}\n      </LatestPosts>\n    </>\n  );\n};\n\nexport default PageSidebarContent;\n","import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport Subheader from \"../components/subheader\";\nimport {Page} from \"../utils/models\";\nimport Theme from \"../styles/theme\";\nimport {Container} from \"../components/common\";\nimport styled from \"styled-components\";\nimport PageSidebarContent from \"../components/page-sidebar-content\";\nimport SEO from \"../components/seo\";\n\ninterface PageTemplateProps {\n  pathContext: {\n    page: Page;\n  };\n  location: Location;\n}\n\nconst PageContainer = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    display: block;\n  }\n\n  p:first-child {\n    margin-top: 0;\n  }\n\n  li > a,\n  p > a {\n    color: ${Theme.layout.linkColor};\n    border-bottom: 2px ${Theme.layout.linkColor} solid;\n  }\n`;\n\nconst PageSidebar = styled.aside`\n  margin-left: 50px;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    margin-left: 0;\n  }\n`;\n\nconst PageTemplate: FunctionComponent<PageTemplateProps> = ({pathContext, location}) => {\n  const page = pathContext.page;\n\n  return (\n    <Layout bigHeader={true}>\n      <SEO\n        title={page.frontmatter.title}\n        description={page.frontmatter.excerpt}\n        location={location}\n      />\n      {/*<Subheader title={page.frontmatter.title} backgroundColor={Theme.layout.primaryColor}/>*/}\n      <PageContainer>\n        <section dangerouslySetInnerHTML={{__html: page.html}}/>\n        <PageSidebar>\n          <PageSidebarContent />\n        </PageSidebar>\n      </PageContainer>\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n"],"sourceRoot":""}